<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ModifiableParameters</name>
    </assembly>
    <members>
        <member name="T:ModifiableParameters.Calculators.ConstantValueCalculator`1">
            <summary> Just sets ConstantValue as CurrentValue of parameter regardless of parameter properties. </summary>
        </member>
        <member name="T:ModifiableParameters.Calculators.IParameterCalculator`1">
            <summary> Algorithm for applying the modifier list to calculate the CurrentValue of the parameter. </summary>
        </member>
        <member name="T:ModifiableParameters.Calculators.EmptyModifiersRequirement">
            <summary> Returns parameter base value if don't contain any modifiers. If parametr has any modifiers, returns !BaseValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Calculators.AndGateCalculator">
            <summary> Returns BaseValue if it and all modifiers value the same (or modifiers count is 0). If contains modifiers with another values, returns !BaseValue.</summary>
        </member>
        <member name="T:ModifiableParameters.Calculators.SameModifiersValueRequirement">
            <summary> Returns true if parameter base value and all modifiers value the same. If don't contain any modifiers, returns true.</summary>
        </member>
        <member name="T:ModifiableParameters.Calculators.FloatAdditionCalculator">
            <summary> Adds the parameter base value and modifiers value. </summary>
        </member>
        <member name="T:ModifiableParameters.Calculators.IntAdditionCalculator">
            <summary> Adds the parameter base value and modifiers value. </summary>
        </member>
        <member name="T:ModifiableParameters.Calculators.ConstantBaseValueCalculator`1">
            <summary> Sets BaseValue as CurrentValue of parameter regardless of parameter properties. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.FloatParameterExtensions.SetMax(ModifiableParameters.Parameters.FloatParameter,System.Single)">
            <summary> Add or update IntMaxValueLimiter to the parameter. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.FloatParameterExtensions.SetMin(ModifiableParameters.Parameters.FloatParameter,System.Single)">
            <summary> Add or update IntMinValueLimiter to the parameter. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.FloatParameterExtensions.BanValue(ModifiableParameters.Parameters.FloatParameter,System.Single,System.Single,System.Single)">
            <summary> Add BannedIntLimiter to the parameter limiters. If the parameter CurrentValue equals bannedValue, set it equal correctValue. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.FloatParameterExtensions.BanModifierValue(ModifiableParameters.Parameters.FloatParameter,System.Single,System.Single,System.Single)">
            <summary> Add BannedIntModifierLimiter to the parameter limiters. 
            If some modifier value equals bannedValue, set parameter CurrentValue equal correctValue. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.IntParameterExtensions.SetMax(ModifiableParameters.Parameters.IntParameter,System.Int32)">
            <summary> Add or update IntMaxValueLimiter to the parameter. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.IntParameterExtensions.SetMin(ModifiableParameters.Parameters.IntParameter,System.Int32)">
            <summary> Add or update IntMinValueLimiter to the parameter. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.IntParameterExtensions.BanValue(ModifiableParameters.Parameters.IntParameter,System.Int32,System.Int32)">
            <summary> Add BannedIntLimiter to the parameter limiters. If the parameter CurrentValue equals bannedValue, set it equal correctValue. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.IntParameterExtensions.BanModifierValue(ModifiableParameters.Parameters.IntParameter,System.Int32,System.Int32)">
            <summary> Add BannedIntModifierLimiter to the parameter limiters. 
            If some modifier value equals bannedValue, set parameter CurrentValue equal correctValue. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.LimitersExtensions.RemoveAllLimiters``1(ModifiableParameters.Parameters.ILimitable{``0})">
            <summary> Remove and return all limiters from limitable parameter. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.LimitersExtensions.AddAllLimiters``1(ModifiableParameters.Parameters.ILimitable{``0},System.Collections.Generic.IEnumerable{ModifiableParameters.Limiters.IParameterLimiter{``0}})">
            <summary> Add list of limiters to limitable parameter. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.ModifiersExtensions.RemoveAllModifiers``1(ModifiableParameters.Parameters.IModifiable{``0})">
            <summary> Remove and return all modifiers from modifiable parameter. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.ModifiersExtensions.AddAllModifiers``1(ModifiableParameters.Parameters.IModifiable{``0},System.Collections.Generic.IEnumerable{ModifiableParameters.Parameters.ParameterModifier{``0}})">
            <summary> Add list of modifiers to modifiable parameter. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.ModifiersExtensions.TryAddModifier``1(ModifiableParameters.Parameters.IModifiable{``0},ModifiableParameters.Parameters.ParameterModifier{``0})">
            <summary> Returns true if modifier not contains in parameter and was successfully added. </summary>
        </member>
        <member name="M:ModifiableParameters.Extensions.ModifiersExtensions.TryRemoveModifier``1(ModifiableParameters.Parameters.IModifiable{``0},ModifiableParameters.Parameters.ParameterModifier{``0})">
            <summary> Returns true if modifier contains in parameter and was successfully removed. </summary>
        </member>
        <member name="T:ModifiableParameters.Limiters.BannedFloatLimiter">
            <summary> If parameter current value equal BannedValue, limiter changes it to CorrectedValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Limiters.BannedIntLimiter">
            <summary> If parameter current value equal BannedValue, limiter changes it to CorrectedValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Limiters.BannedIntModifierLimiter">
            <summary> Checks the list of modifiers for forbidden value. If it finds a banned value, changed correctedCurrValue to this limiter СorrectedValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Limiters.IntMaxValueLimiter">
            <summary> Set maximum limit to the parameter CurrentValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Limiters.IntMinValueLimiter">
            <summary> Set minimum limit to the parameter CurrentValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Limiters.IParameterLimiter`1">
            <summary> Limiter allows to apply some requirements to calculated CurrentValue. 
            Use for setting limits for current value or checking for 0, etc. </summary>
        </member>
        <member name="M:ModifiableParameters.Limiters.IParameterLimiter`1.IsMeetLimit(ModifiableParameters.Parameters.IParameter{`0},`0@)">
            <summary>
            Check if the argument correctedCurrValue meets some requirements. 
            If not, change ref correctedCurrValue to correct value and return false.
            </summary>
            <returns>True if correctedCurrValue meet this limiter.</returns>
        </member>
        <member name="T:ModifiableParameters.Limiters.BannedFloatModifierLimiter">
            <summary> Checks the list of modifiers for forbidden value. If it finds a banned value, changed correctedCurrValue to this limiter СorrectedValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Limiters.FloatMaxValueLimiter">
            <summary> Set maximum limit to the parameter CurrentValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Limiters.FloatMinValueLimiter">
            <summary> Set minimum limit to the parameter CurrentValue. </summary>
        </member>
        <member name="T:ModifiableParameters.Parameters.ALimitableParameter`1">
            <summary> Abstract parameter that implements ILimitable interface.
            Limiters apply to CurrentValue after recalculate and allow you to limit the resulting value. </summary>
        </member>
        <member name="T:ModifiableParameters.Parameters.FloatComplexCalculator">
            <summary> Multiplies NumericPart value by MultiplierPart value. </summary>
        </member>
    </members>
</doc>
